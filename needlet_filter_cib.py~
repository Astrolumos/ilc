# This code filter the Planck maps in needlets and calculate the covariance matrices.
import healpy as hp
import numpy as np
import matplotlib.pyplot as plt

Np = hp.nside2npix(2048)
freqs = np.array([353,545,857])
h = np.zeros((10,8192))
map_1 = np.zeros((3,Np))
map_2 = np.zeros((3,Np))
map_1_filtered = np.zeros((3,Np))
map_2_filtered = np.zeros((3,Np))
maps = np.zeros((3,Np))
maps_filtered = np.zeros((6,Np))
alm = np.zeros((3,33558528),dtype = complex)
alm_1 = np.zeros((3,33558528),dtype = complex)
alm_2 = np.zeros((3,33558528),dtype = complex)
datapath = '/home/yanza15/research/Ghinshaw/ACT/data'

for j in range(3):
    freq = freqs[j]
    maps[j] = hp.read_map(datapath + '/Planck_data/foreground/COM_CompMap_CIB-GNILC-F'+str(freqs[j])+'_2048_R2.00_smth10.fits')
    alm[j] =  hp.map2alm(maps[j],lmax = 8191)
        
for i in range(10):
    h[i] = np.loadtxt('../results/needlet_'+str(i)+'.txt')[0:8192] ** 2
    for j in range(3):
        alm_filtered = hp.almxfl(alm[j],h[i])
        maps_filtered[j] = hp.alm2map(alm_filtered,2048)
        hp.write_map('../maps/Planck_maps/COM_CompMap_CIB-GNILC-F'+str(freqs[j])+'_2048_R2.00_smth10_needlet'+str(i)+'.fits',maps_filtered[j])


